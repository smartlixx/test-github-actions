name: Test_ifort_netcdf
on: [pull_request,push,workflow_dispatch]

jobs:
  test_ifort_netcdf:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-20.04]
        hdf5: [ 1.12.2 ]
        netcdf: [ v4.7.4, v4.8.1, v4.9.0, main ]
        #mpi: ['mpich', 'openmpi', 'intelmpi']
        toolchain:
          - {compiler: intel, version: '2023.2'}
          - {compiler: intel, version: '2022.2.1'}
          - {compiler: intel, version: '2021.2'}
          - {compiler: intel-classic, version: '2021.1'}
          - {compiler: intel-classic, version: '2021.10'}
    steps:
      - uses: actions/checkout@v4
      - name: Install System dependencies
        shell: bash -l {0}
        run: sudo apt update && sudo apt install -y libaec-dev zlib1g-dev automake autoconf libcurl4-openssl-dev libjpeg-dev wget curl bzip2 m4 flex bison cmake libzip-dev
      #- uses: mpi4py/setup-mpi@v1
      #  with:
      #    mpi: ${{ matrix.mpi }}
      - uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: ${{ matrix.toolchain.compiler }}
          version: ${{ matrix.toolchain.version }} 
      - run: echo "CC=icc" >> $GITHUB_ENV
      - run: echo "CXX=icpc" >> $GITHUB_ENV
      - run: echo "FC=ifort" >> $GITHUB_ENV
      - run: echo "F90=ifort" >> $GITHUB_ENV
      - run: echo "CFLAGS=-I${HOME}/environments/${{ matrix.hdf5 }}-${{ matrix.netcdf }}/include -fPIC -O3 -xHost -ip -fno-alias -align" >> $GITHUB_ENV
      - run: echo "LDFLAGS=-L${HOME}/environments/${{ matrix.hdf5 }}-${{ matrix.netcdf }}/lib" >> $GITHUB_ENV
      - run: echo "FFLAGS=-fPIC -O3 -xHost -ip -fno-alias -align" >> $GITHUB_ENV
      - run: echo "LD_LIBRARY_PATH=${HOME}/environments/${{ matrix.hdf5 }}-${{ matrix.netcdf }}/lib" >> $GITHUB_ENV
 
      ###
      # Installing libhdf4 and libhdf5
      ###
      - name: Cache libhdf5-${{ matrix.hdf5 }}-${{ matrix.netcdf }}
        id: cache-hdf5
        uses: actions/cache@v3
        with:
          path: ~/environments/${{ matrix.hdf5 }}-${{ matrix.netcdf }}
          key: hdf5-${{ runner.os }}-${{ matrix.hdf5 }}-${{ matrix.netcdf }}

      - name: Build libhdf5-${{ matrix.hdf5 }}-${{ matrix.netcdf }}
        if: steps.cache-hdf5.outputs.cache-hit != 'true'
        run: |
          pushd $HOME
          wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-$(echo ${{ matrix.hdf5 }} | cut -d. -f 1,2)/hdf5-${{ matrix.hdf5 }}/src/hdf5-${{ matrix.hdf5 }}.tar.bz2
          tar -jxf hdf5-${{ matrix.hdf5 }}.tar.bz2
          pushd hdf5-${{ matrix.hdf5 }}
          ./configure --disable-static --enable-shared --enable-fortran --prefix=${HOME}/environments/${{ matrix.hdf5 }}-${{ matrix.netcdf }} --enable-hl --with-szlib
          make -j
          make install -j
          popd
          if [[ ${{ matrix.netcdf }} != "main" ]]; then
            git clone -b ${{ matrix.netcdf}} https://github.com/Unidata/netcdf-c
            pushd netcdf-c
            autoreconf -if
            CFLAGS=${CFLAGS} LDFLAGS=${LDFLAGS} LD_LIBRARY_PATH=${LD_LIBRARY_PATH} ./configure --disable-static --enable-shared --prefix=${HOME}/environments/${{ matrix.hdf5 }}-${{ matrix.netcdf }}
            make -j install
            popd
          fi
          nc-config --all

        #- name: Install netcdf-fortran library
